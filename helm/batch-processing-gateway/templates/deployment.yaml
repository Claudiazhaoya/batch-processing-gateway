apiVersion: apps/v1
kind: Deployment
metadata:
  name: bpg
  namespace: {{ .Values.namespace }}
  labels:
    app: bpg
  annotations:
    reloader.stakater.com/search: "true"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: bpg
  template:
    metadata:
      labels:
        app: bpg
    spec:
      containers:
        - name: bpg
          image: '{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          imagePullPolicy: IfNotPresent
          command: ["/opt/entrypoint.sh"]
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          ports:
            - containerPort: 8080
            - containerPort: 8081
              name: healthcheck
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: healthcheck
            failureThreshold: 3
            periodSeconds: 15
          volumeMounts:
            {{- if not (empty .Values.encodedConfig) }}
            - name: configuration
              mountPath: "/app/"
              readOnly: true
            {{- end }}
            {{- if not (empty .Values.plainConfig) }}
            - name: configuration
              mountPath: "/etc/app_config/"
              readOnly: true
            {{- end }}
          env:
            - name: MAX_HEAP_SIZE
              value: "-Xmx20G"
            - name: CONFIG_FILE_PATH
              value: "/etc/app_config/app-config.yaml"
            - name: GZ_FILE_PATH
              value: "/app/app-config.gz"
            - name: STATSD_SERVER_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: STATSD_SERVER_PORT
              value: "8125"
      volumes:
        - name: configuration
          {{- if not (empty .Values.encodedConfig) }}
          configMap:
            name: 'bpg-encoded-config'
            items:
              - key: 'encoded-config-yaml'
                path: 'app-config.gz'
          {{- end }}
          {{- if not (empty .Values.plainConfig) }}
          configMap:
            name: 'bpg-plain-config'
            items:
              - key: 'plain-config-yaml'
                path: 'app-config.yaml'
          {{- end }}
